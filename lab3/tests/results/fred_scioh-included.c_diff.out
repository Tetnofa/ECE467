0a1,147
> Program [useIO=1](1,0)
> 	Scalar Declaration	Int(4,0)
> 		Identifier[name:x](4,4)
> 	Scalar Declaration	Int(5,0)
> 		Identifier[name:y](5,4)
> 	Scalar Declaration	Bool(6,0)
> 		Identifier[name:b1](6,5)
> 	Scalar Declaration	Bool(7,0)
> 		Identifier[name:b2](7,5)
> 	Array Declaration	Int[5](8,0)
> 		Identifier[name:arr](8,4)
> 	Array Declaration	Bool[3](9,0)
> 		Identifier[name:boolArr](9,5)
> 	Function[isProto=0]	Void(11,0)
> 		Identifier[name:f1](11,5)
> 		Scope(11,10)
> 			Assignment(13,2)
> 				Reference(13,2)
> 					Identifier[name:x](13,2)
> 				CallExpr(13,6)
> 					Identifier[name:readInt](13,6)
> 			Assignment(14,2)
> 				Reference(14,2)
> 					Identifier[name:y](14,2)
> 				CallExpr(14,6)
> 					Identifier[name:readInt](14,6)
> 			Assignment(15,2)
> 				Reference(15,2)
> 					Identifier[name:b1](15,2)
> 				CallExpr(15,7)
> 					Identifier[name:readBool](15,7)
> 			Assignment(16,2)
> 				Reference(16,2)
> 					Identifier[name:b2](16,2)
> 				CallExpr(16,7)
> 					Identifier[name:readBool](16,7)
> 			Expression Statement(19,2)
> 				CallExpr(19,2)
> 					Identifier[name:writeInt](19,2)
> 					Argument(19,11)
> 						Int Expression(19,11)
> 							Reference(19,11)
> 								Identifier[name:x](19,11)
> 			Expression Statement(20,2)
> 				CallExpr(20,2)
> 					Identifier[name:writeInt](20,2)
> 					Argument(20,11)
> 						Int Expression(20,11)
> 							Reference(20,11)
> 								Identifier[name:y](20,11)
> 			Expression Statement(21,2)
> 				CallExpr(21,2)
> 					Identifier[name:writeBool](21,2)
> 					Argument(21,12)
> 						Int Expression(21,12)
> 							Reference(21,12)
> 								Identifier[name:b1](21,12)
> 			Expression Statement(22,2)
> 				CallExpr(22,2)
> 					Identifier[name:writeBool](22,2)
> 					Argument(22,12)
> 						Int Expression(22,12)
> 							Reference(22,12)
> 								Identifier[name:b2](22,12)
> 			Expression Statement(25,2)
> 				CallExpr(25,2)
> 					Identifier[name:newLine](25,2)
> 			Expression Statement(28,2)
> 				CallExpr(28,2)
> 					Identifier[name:writeInt](28,2)
> 					Argument(28,11)
> 						CallExpr(28,11)
> 							Identifier[name:readInt](28,11)
> 			Expression Statement(29,2)
> 				CallExpr(29,2)
> 					Identifier[name:writeBool](29,2)
> 					Argument(29,12)
> 						CallExpr(29,12)
> 							Identifier[name:readBool](29,12)
> 			Assignment(34,2)
> 				Reference(34,2)
> 					Identifier[name:x](34,2)
> 				CallExpr(34,6)
> 					Identifier[name:readBool](34,6)
> 			Assignment(35,2)
> 				Reference(35,2)
> 					Identifier[name:b1](35,2)
> 				CallExpr(35,7)
> 					Identifier[name:readInt](35,7)
> 			Expression Statement(37,2)
> 				CallExpr(37,2)
> 					Identifier[name:writeInt](37,2)
> 					Argument(37,11)
> 						Int Expression(37,11)
> 							Reference(37,11)
> 								Identifier[name:b1](37,11)
> 			Expression Statement(38,2)
> 				CallExpr(38,2)
> 					Identifier[name:writeBool](38,2)
> 					Argument(38,12)
> 						Int Expression(38,12)
> 							Reference(38,12)
> 								Identifier[name:x](38,12)
> 			Expression Statement(41,2)
> 				CallExpr(41,2)
> 					Identifier[name:writeInt](41,2)
> 					Argument(41,11)
> 						Int Expression(41,11)
> 							Reference(41,11)
> 								Identifier[name:arr](41,11)
> 			Expression Statement(42,2)
> 				CallExpr(42,2)
> 					Identifier[name:writeBool](42,2)
> 					Argument(42,12)
> 						Int Expression(42,12)
> 							Reference(42,12)
> 								Identifier[name:boolArr](42,12)
> 			Expression Statement(45,2)
> 				CallExpr(45,2)
> 					Identifier[name:writeInt](45,2)
> 					Argument(45,11)
> 						CallExpr(45,11)
> 							Identifier[name:readBool](45,11)
> 			Expression Statement(46,2)
> 				CallExpr(46,2)
> 					Identifier[name:writeBool](46,2)
> 					Argument(46,12)
> 						CallExpr(46,12)
> 							Identifier[name:readInt](46,12)
> 			Expression Statement(49,2)
> 				CallExpr(49,2)
> 					Identifier[name:writeInt](49,2)
> 					Argument(49,11)
> 						Int Expression(49,11)
> 							BoolConstant[val=1](49,11)
> 			Expression Statement(50,2)
> 				CallExpr(50,2)
> 					Identifier[name:writeBool](50,2)
> 					Argument(50,12)
> 						Int Expression(50,12)
> 							IntConstant[val=10](50,12)
> 			Expression Statement(53,2)
> 				CallExpr(53,2)
> 					Identifier[name:newLine](53,2)
> 					Argument(53,10)
> 						Int Expression(53,10)
> 							IntConstant[val=1](53,10)
